#!/usr/bin/env python3
"""Validate the JSON schemas in our tool definitions."""

import json
import jsonschema
from jsonschema import Draft7Validator

# Test schema that would be generated by our tools
test_schema = {
    "type": "object",
    "properties": {
        "credentials": {
            "type": "object",
            "properties": {
                "access_key_id": {"type": "string"},
                "secret_access_key": {"type": "string"},
                "region": {"type": "string"},
                "session_token": {"type": "string"}
            },
            "required": ["access_key_id", "secret_access_key", "region"]
        },
        "security_group_id": {"type": "string"},
        "ip_address": {"type": "string"},
        "port": {"type": "integer"},
        "protocol": {"type": "string", "enum": ["tcp", "udp", "icmp"]},
        "description": {"type": "string"}
    },
    "required": ["credentials", "security_group_id", "ip_address"]
}

# Validate the schema itself
try:
    Draft7Validator.check_schema(test_schema)
    print("✓ Schema is valid!")
except jsonschema.exceptions.SchemaError as e:
    print(f"✗ Schema validation error: {e}")

# Test some example inputs
test_inputs = [
    # Valid input
    {
        "credentials": {
            "access_key_id": "AKIAIOSFODNN7EXAMPLE",
            "secret_access_key": "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY",
            "region": "us-east-1"
        },
        "security_group_id": "sg-12345678",
        "ip_address": "192.168.1.1",
        "port": 443,
        "protocol": "tcp"
    },
    # Valid input with session token
    {
        "credentials": {
            "access_key_id": "AKIAIOSFODNN7EXAMPLE",
            "secret_access_key": "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY",
            "region": "us-east-1",
            "session_token": "FwoGZXIvYXdzEJr..."
        },
        "security_group_id": "sg-12345678",
        "ip_address": "192.168.1.1"
    },
    # Invalid - missing required field
    {
        "credentials": {
            "access_key_id": "AKIAIOSFODNN7EXAMPLE",
            "secret_access_key": "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
            # Missing region
        },
        "security_group_id": "sg-12345678",
        "ip_address": "192.168.1.1"
    },
    # Invalid - wrong type for port
    {
        "credentials": {
            "access_key_id": "AKIAIOSFODNN7EXAMPLE",
            "secret_access_key": "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY",
            "region": "us-east-1"
        },
        "security_group_id": "sg-12345678",
        "ip_address": "192.168.1.1",
        "port": "443"  # Should be integer
    }
]

# Validate test inputs
validator = Draft7Validator(test_schema)
for i, test_input in enumerate(test_inputs):
    print(f"\nTest input {i + 1}:")
    errors = list(validator.iter_errors(test_input))
    if errors:
        print(f"✗ Validation errors:")
        for error in errors:
            print(f"  - {error.message}")
    else:
        print("✓ Valid input")